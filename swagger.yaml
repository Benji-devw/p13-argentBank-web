swagger: '2.0'

info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
  
host: localhost:3001
basePath: /api/v1
schemes:
  - http
  
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
          
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
          
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
          
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
          
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: "Get all transactions for the current month, grouped by account"
      description: "Returns a list of all transactions for the current month, grouped by account"
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        200:
          description: "A list of transactions grouped by account"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TransactionGroup"
        401:
          description: "Unauthorized"
        500:
          description: "Internal Server Error"
          
  /transactions/{transactionId}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: "Get details of a specific transaction"
      description: "Returns the details of a specific transaction"
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: "The ID of the transaction to retrieve"
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      responses:
        200:
          description: "Transaction details"
          schema:
            $ref: "#/definitions/Transaction"
        401:
          description: "Unauthorized"
        403: 
          description: "Forbidden"
        404:
          description: "Transaction not found"
        500:
          description: "Internal Server Error"

    patch:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: "Update an existing transaction"
      description: "Updates the details of an existing transaction"
      parameters:
        - in: path
          name: transactionId
          required: true
          type: string
          description: "The ID of the transaction to update"
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: "Updated transaction details"
          required: true
          schema:
            $ref: "#/definitions/PatchTransaction"
      produces:
        - application/json
      responses:
        200:
          description: "Transaction updated"
          schema:
            $ref: "#/definitions/Transaction"
        400:
          description: "Invalid input"
        401:
          description: "Unauthorized"
        403:
          description: "Forbidden"
        404:
          description: "Transaction not found"
        500:
          description: "Internal Server Error"

  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: "Get all user accounts"
      description: "Returns a list of all accounts for the authenticated user"
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        200:
          description: "List of user accounts"
          schema:
            type: array
            items:
              $ref: "#/definitions/Account"
        401:
          description: "Unauthorized"
        500:
          description: "Internal Server Error"

  /accounts/{accountId}:
    get:
      security:
        - Bearer: []
      tags:
        - Account Module
      summary: "Get specific account details"
      description: "Returns the details of a specific account"
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: "The ID of the account to retrieve"
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      responses:
        200:
          description: "Account details"
          schema:
            $ref: "#/definitions/Account"
        404:
          description: "Account not found"

  /accounts/{accountId}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: "Get transactions for a specific account"
      description: "Returns transactions for a specific account. By default, returns transactions for the rolling 30-day period. Transactions can be filtered by category and date range."
      parameters:
        - in: path
          name: accountId
          required: true
          type: string
          description: "The ID of the account"
        - in: query
          name: startDate
          type: string
          format: date
          description: "Start date for transaction range (YYYY-MM-DD). Defaults to 30 days ago"
        - in: query
          name: endDate
          type: string
          format: date
          description: "End date for transaction range (YYYY-MM-DD). Defaults to current date"
        - in: query
          name: category
          type: string
          description: "Filter transactions by category"
          enum: ["alimentation", "services", "divers"]
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      responses:
        200:
          description: "List of transactions"
          schema:
            type: object
            properties:
              accountId:
                type: string
              balance:
                type: number
                format: double
              transactions:
                type: array
                items:
                  $ref: "#/definitions/Transaction"
              categories:
                type: array
                items:
                  type: string
                  enum: ["alimentation", "services", "divers"]
        401:
          description: "Unauthorized"
        404:
          description: "Account not found"
        500:
          description: "Internal Server Error"

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
    
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
        
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
        
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
            
  LoginResponse:
    type: object
    properties:
      token:
        type: string
        
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
        
  Transaction:
    type: object
    required:
      - id
      - accountId
      - amount
      - date
      - description
      - balance
      - category
      - type
    properties:
      id:
        type: string
        description: "Unique identifier for the transaction"
      accountId:
        type: string
        description: "ID of the account associated with the transaction"
      date:
        type: string
        format: date-time
        description: "Date and time of the transaction"
      description:
        type: string
        description: "Description of the transaction"
      amount:
        type: number
        format: double
        description: "Amount of the transaction"
      balance:
        type: number
        format: double
        description: "Balance after the transaction"
      type:
        type: string
        description: "Transaction type (credit or debit)"
        enum: ["credit", "debit"]
      category:
        type: string
        description: "Transaction category"
        enum: ["alimentation", "services", "divers"]
      notes:
        type: string
        description: "User notes about the transaction"

  TransactionGroup:
    type: "object"
    properties:
      accountId:
        type: "string"
        description: "ID of the account"
      transactions:
        type: "array"
        items:
          $ref: "#/definitions/Transaction"
  
  PatchTransaction:
    type: "object"
    properties:
      notes:
        type: "string"
        description: "user notes"
      category: 
        type: "string"
        description: "transaction category"
        enum: ["alimentation", "services", "divers"]

  Account:
    type: object
    required:
      - id
      - userId
      - type
      - balance
      - accountNumber
    properties:
      id:
        type: string
        description: "Unique identifier for the account"
      userId:
        type: string
        description: "ID of the user who owns the account"
      type:
        type: string
        description: "Type of account"
        enum: ["Checking", "Savings", "Credit Card"]
      balance:
        type: number
        format: double
        description: "Current balance of the account"
      accountNumber:
        type: string
        description: "Masked account number (e.g., 'x8349')"
      createdAt:
        type: string
        format: date-time
        description: "Account creation date"